---
import Layout from '../../layouts/BaseLayout.astro';
import { getCollection, getEntryBySlug } from 'astro:content';
import { AstroError } from 'astro/errors';
import Alert from '../../components/Alert.astro';

const { slug } = Astro.params;

// Get blog post by slug
const post = await getEntryBySlug('blog', slug);

if (!post) {
  throw new AstroError(`Post not found: ${slug}`);
}

const { Content, data } = await post.render();

// Estimate reading time
const wordsPerMinute = 200;
const wordCount = post.body?.raw?.split(/\s+/).length || 0;
const readingTime = Math.max(1, Math.ceil(wordCount / wordsPerMinute));

// Format publication date safely
let formattedDate = 'Unknown Date';
if (data?.pubDate) {
  const date = new Date(data.pubDate);
  if (!isNaN(date)) {
    formattedDate = date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });
  }
}

// Required for dynamic routes
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}
---

<Layout title={data.title} description={data.description}>
  <main class="prose prose-lg mx-auto py-12">
    <header class="mb-6">
      <h1>{data.title}</h1>
      <p class="text-gray-500 text-sm">
        Published on {formattedDate} &middot; About {readingTime} min read
      </p>
    </header>
    <Content components={{ Alert }} />
  </main>
</Layout>
