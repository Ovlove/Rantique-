---
import Layout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { AstroError } from 'astro/errors';
import Alert from '../../components/Alert.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;
const post = await getCollection('blog').then(c => c.find(p => p.slug === slug));

if (!post) {
  throw new AstroError(`Post not found: ${slug}`);
}

const { Content, data } = await post.render();

// Calculate reading time
const wordsPerMinute = 200;
const rawText = post.body?.raw || '';
const wordCount = rawText.trim().split(/\s+/).length;
const readingTime = Math.max(1, Math.ceil(wordCount / wordsPerMinute)); // minimum 1 min read
---

<Layout title={data.title} description={data.description}>
  <main class="prose prose-lg mx-auto py-12">
    <header class="mb-6">
      <h1>{data.title}</h1>
      <p class="text-gray-500 text-sm">
        Published on {data.pubDate.toDateString()} &middot; {readingTime} min read
      </p>
    </header>
    <Content components={{ Alert }} />
  </main>
</Layout>
