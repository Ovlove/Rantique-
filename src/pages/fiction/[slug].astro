---
import { getEntryBySlug } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
import Alert from '../../components/Alert.astro';

const { slug } = Astro.params;

const post = await getEntryBySlug('fiction', slug);
if (!post) throw new Error(`Fiction post not found: ${slug}`);

const { Content } = await post.render();
if (!Content) throw new Error(`Content component is undefined for slug: ${slug}`);

const data = post.data;
const pubDate = data?.pubDate ? new Date(data.pubDate) : null;

const wordsPerMinute = 200;
const wordCount = post.body?.raw?.trim().split(/\s+/).length || 0;
const readingTime = Math.max(1, Math.ceil(wordCount / wordsPerMinute));

const formattedDate = pubDate
  ? pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })
  : 'Unknown Date';

export async function getStaticPaths() {
  const posts = await import('astro:content').then(mod => mod.getCollection('fiction'));
  return posts.map(post => ({
    params: { slug: post.slug },
  }));
}
---

<PostLayout
  title={data?.title ?? 'Untitled'}
  description={data?.description ?? ''}
  pubDate={pubDate}
  tags={data?.tags ?? []}
  subtitle={data?.subtitle}
  contentType="fiction"
  readingTime={readingTime}
  formattedDate={formattedDate}
>
  <Content components={{ Alert }} />
</PostLayout>
