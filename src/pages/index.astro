---
import Layout from '../layouts/BaseLayout.astro';
import Alert from '../components/Alert.astro';
import { getCollection } from 'astro:content';

function calculateReadingTime(text) {
  const wordsPerMinute = 200;
  const wordCount = text.trim().split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
}

const rawPosts = await getCollection('blog');

const posts = rawPosts
  .sort((a, b) => b.data.pubDate - a.data.pubDate)
  .slice(0, 10)
  .map(post => ({
    slug: post.slug,
    title: post.data.title,
    description: post.data.description || '',
    pubDate: post.data.pubDate,
    formattedDate: post.data.pubDate.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    }),
    readingTime: calculateReadingTime(post.body?.raw || ''),
  }));

// Optional: pick first post as featured
const featuredPost = posts[0];
const otherPosts = posts.slice(1);
---

<Layout title="Rantique â€“ A Boutique of Insightful Ideas" description="Articles, opinions, and short fiction that spark thought.">
  <main class="max-w-4xl mx-auto px-6 py-16 space-y-16">

    <!-- Hero Section -->
    <section class="text-center">
      <img src="/favicon-32x32.png" alt="Rantique Logo" class="mx-auto w-14 h-14 mb-6" loading="lazy" />
      <h1 class="text-5xl font-extrabold tracking-tight text-gray-900 dark:text-white">
        Welcome to <span class="text-purple-600 dark:text-purple-400">Rantique</span>
      </h1>
      <p class="mt-4 text-lg text-gray-600 dark:text-gray-300 max-w-xl mx-auto">
        A boutique of insightful ideas â€” exploring stories, commentary, and conversations that matter.
      </p>
      <Alert type="success" class="mt-6 max-w-md mx-auto">
        ðŸŽ‰ Rantique is live â€” thanks for being here early!
      </Alert>
    </section>

    <!-- Search -->
    <section class="max-w-md mx-auto">
      <input
        type="search"
        placeholder="Search blog posts..."
        class="w-full px-5 py-3 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-gray-800 dark:text-white"
        x-data=""
        x-model.debounce.300ms="query"
        aria-label="Search blog posts"
      />
    </section>

    <!-- Featured Post -->
    {featuredPost && (
      <section aria-label="Featured post" class="border rounded-lg p-6 shadow-md dark:bg-[#1A1A2E]">
        <a
          href={`/blog/${featuredPost.slug}/`}
          class="text-2xl font-bold text-purple-700 dark:text-purple-400 hover:underline"
        >
          {featuredPost.title}
        </a>
        <p class="mt-2 text-gray-700 dark:text-gray-300">{featuredPost.description}</p>
        <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
          {featuredPost.formattedDate} Â· {featuredPost.readingTime} min read
        </p>
      </section>
    )}

    <!-- Blog Posts List -->
    <section aria-live="polite" aria-atomic="true" class="space-y-8">
      <h2 class="text-3xl font-semibold text-gray-900 dark:text-white">Latest Posts</h2>
      <ul class="space-y-8">
        <template x-for="post in filteredPosts()" :key="post.slug">
          <li class="border-b pb-4">
            <a
              :href="`/blog/${post.slug}/`"
              class="text-xl font-semibold text-purple-700 dark:text-purple-400 hover:underline"
              x-html="highlight(post.title)"
            ></a>
            <p
              class="mt-1 text-gray-600 dark:text-gray-400 text-sm"
              x-show="post.description"
              x-html="highlight(post.description)"
            ></p>
            <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
              <span x-text="post.formattedDate"></span> Â· <span x-text="post.readingTime + ' min read'"></span>
            </p>
          </li>
        </template>
      </ul>
      <p
        x-show="filteredPosts().length === 0"
        class="text-center text-gray-500 italic mt-8"
      >
        No posts found.
      </p>
    </section>

    <!-- Fiction Callout -->
    <section class="text-center mt-12">
      <a
        href="/fiction/"
        class="inline-block px-6 py-3 bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600 text-white rounded-md font-semibold transition"
      >
        Discover Our Original Short Fiction â†’
      </a>
    </section>

    <!-- Alpine.js Raw JSON + Script -->
    <script type="application/json" x-ref="rawJson" class="hidden">
      {JSON.stringify(posts)}
    </script>

    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('postsData', () => ({
          query: '',
          posts: [],
          initPosts(json) {
            this.posts = JSON.parse(json);
          },
          filteredPosts() {
            const q = this.query.toLowerCase().trim();
            if (!q) return this.posts;
            return this.posts.filter(
              p =>
                p.title.toLowerCase().includes(q) ||
                p.description.toLowerCase().includes(q)
            );
          },
          highlight(text) {
            if (!this.query) return this.escapeHtml(text);
            const q = this.query.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
            const regex = new RegExp(`(${q})`, 'gi');
            return this.escapeHtml(text).replace(regex, '<mark class="bg-yellow-200 dark:bg-yellow-600">$1</mark>');
          },
          escapeHtml(text) {
            return text
              .replace(/&/g, '&amp;')
              .replace(/</g, '&lt;')
              .replace(/>/g, '&gt;')
              .replace(/"/g, '&quot;')
              .replace(/'/g, '&#039;');
          },
        }));
      });
    </script>
  </main>
</Layout>
