---
const navLinks = [
  { href: '/', label: 'Home' },
  { href: '/blog', label: 'Blog' },
  { href: '/fiction', label: 'Fiction' },
  { href: '/about', label: 'About' },
  { href: '/contact', label: 'Contact' },
];
---

<header
  x-data="headerData()"
  x-init="init()"
  x-on:keydown.window.escape="closeMenu()"
  :class="{'shadow-md fixed top-0 left-0 right-0 bg-white dark:bg-[#0F0F1A] z-50': scrolled}"
  class="border-b border-gray-200 dark:border-gray-800 transition-shadow duration-300 bg-white dark:bg-[#0F0F1A]"
  aria-label="Primary Navigation"
>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex items-center justify-between">

    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2 text-2xl font-bold text-[#1A1A2E] dark:text-white" aria-label="Rantique Home">
      <img src="/favicon-32x32.png" alt="Rantique Logo" class="w-8 h-8" loading="lazy" />
      <span>Rantique</span>
    </a>

    <!-- Desktop Nav + Dark Mode Toggle -->
    <nav class="hidden sm:flex items-center space-x-6" role="menubar" aria-label="Primary Menu">
      <template x-for="link in navLinks" :key="link.href">
        <a
          :href="link.href"
          :class="{'text-[#7F5AF0] font-semibold': isActiveLink(link.href), 'text-gray-700 dark:text-gray-300': !isActiveLink(link.href)}"
          class="text-sm font-medium hover:text-[#7F5AF0] dark:hover:text-[#7F5AF0] transition focus:outline-none focus:ring-2 focus:ring-[#7F5AF0] rounded"
          role="menuitem"
          x-text="link.label"
        ></a>
      </template>

      <!-- Dark Mode Toggle Button -->
      <button
        @click="toggleDarkMode()"
        :aria-label="darkMode ? 'Switch to light mode' : 'Switch to dark mode'"
        :aria-pressed="darkMode.toString()"
        class="ml-6 p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-[#7F5AF0] hover:text-white transition focus:outline-none focus:ring-2 focus:ring-[#7F5AF0]"
        type="button"
      >
        <template x-if="!darkMode">
          <!-- Moon Icon -->
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6 transition-transform duration-500 transform"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
            x-transition:enter="transform scale-90 opacity-0"
            x-transition:enter-end="transform scale-100 opacity-100"
            x-transition:leave="transform scale-100 opacity-100"
            x-transition:leave-end="transform scale-90 opacity-0"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M21 12.79A9 9 0 1111.21 3a7 7 0 009.79 9.79z" />
          </svg>
        </template>
        <template x-if="darkMode">
          <!-- Sun Icon -->
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6 transition-transform duration-500 transform"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
            x-transition:enter="transform scale-90 opacity-0"
            x-transition:enter-end="transform scale-100 opacity-100"
            x-transition:leave="transform scale-100 opacity-100"
            x-transition:leave-end="transform scale-90 opacity-0"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v1m0 16v1m8.66-10H21m-16 0H3m15.364 6.364l.707.707m-12.02 0l-.707.707m12.02-12.02l.707-.707m-12.02 0l-.707-.707M12 7a5 5 0 000 10a5 5 0 000-10z" />
          </svg>
        </template>
      </button>
    </nav>

    <!-- Mobile Hamburger Menu -->
    <div class="sm:hidden relative" x-cloak>
      <button
        @click="open = !open"
        :aria-expanded="open.toString()"
        aria-controls="mobile-menu"
        aria-label="Toggle menu"
        class="text-gray-700 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-[#7F5AF0] rounded"
        type="button"
      >
        <!-- Hamburger / Close Icon -->
        <svg
          x-show="!open"
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
          style="display: block;"
          aria-hidden="true"
        >
          <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg
          x-show="open"
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
          style="display: none;"
          aria-hidden="true"
        >
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>

      <div
        x-show="open"
        x-trap.noscroll="open"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-95"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-95"
        id="mobile-menu"
        class="absolute right-0 mt-2 w-56 bg-white dark:bg-[#1A1A2E] rounded-md shadow-lg py-3 z-50"
        @click.away="open = false"
      >
        <template x-for="link in navLinks" :key="link.href">
          <a
            :href="link.href"
            @click="open = false"
            :class="{'bg-[#7F5AF0] text-white': isActiveLink(link.href), 'text-gray-700 dark:text-gray-300': !isActiveLink(link.href)}"
            class="block px-4 py-2 rounded focus:outline-none focus:bg-gray-200 dark:focus:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 transition"
            x-text="link.label"
            role="menuitem"
          ></a>
        </template>

        <!-- Mobile Dark Mode Toggle -->
        <button
          @click="toggleDarkMode()"
          class="mt-2 w-full px-4 py-2 text-left bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-[#7F5AF0] hover:text-white rounded transition focus:outline-none focus:ring-2 focus:ring-[#7F5AF0]"
          type="button"
        >
          <span x-text="darkMode ? 'Switch to light mode' : 'Switch to dark mode'"></span>
        </button>
      </div>
    </div>

  </div>
</header>

<script>
  function headerData() {
    return {
      navLinks: JSON.parse(`{{JSON.stringify(navLinks)}}`),
      darkMode: false,
      scrolled: false,
      open: false,

      toggleDarkMode() {
        this.darkMode = !this.darkMode;
        if (this.darkMode) {
          document.documentElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        }
      },

      init() {
        // Initialize dark mode from localStorage or system preference
        if (
          localStorage.getItem('theme') === 'dark' ||
          (!localStorage.getItem('theme') &&
            window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          this.darkMode = true;
          document.documentElement.classList.add('dark');
        } else {
          this.darkMode = false;
          document.documentElement.classList.remove('dark');
        }

        // Listen for scroll to add shadow and sticky header
        window.addEventListener('scroll', () => {
          this.scrolled = window.scrollY > 5;
        });
      },

      closeMenu() {
        this.open = false;
      },

      isActiveLink(href) {
        const currentPath = window.location.pathname.replace(/\/$/, '');
        return currentPath === href.replace(/\/$/, '');
      },
    };
  }
</script>
